// ORIENTE OBJET :
// INCONVENIENTS : 
- Techniquement, on ne peut rien faire de plus avec l'orienté objet qu'avec le procédural 
- En général, l'approche orienté objet est moins intuitive que l'approche procédural pour l'esprit humain
- Lègère perte de performance (peuvant être amélioré par divers moyen d'optimisation)

// AVANTAGES :  
- Modulariser afin d'avoir un codé évolutif 
- Encourage le travail collaboratif (pas besoin de ré-ouvrir toutes les pages , l'UML permet de décrire le comportement de l'application et lesd intéractions entre les objets)
- Masquer la complexité grace au principe d'encapsulation
- Possibilté de documenter le code
- Ré-utilisation du code, ne pas repartir de zéro, effectuer un code type pouvant être repris sur d'autres projets. code généric
Cest ce que donne des modules sur DRUPAL, c'est aussi comme que sopnt nés les framework, avec des bibliothèques que les développeurs se constituaient, ils ré-utilisaient cde qu'ils faisaient.
Ex :Apple ne vas pas repartir de zéro.. ils vont reprendre l'iphone 6 et le modifier pour sortir une meilleure version
- simplifier la maintenance / mise à jour
Tout ce passe dans la classe en question
- Assouplir, factoriser le code, meilleur conceptualisation
Les pages seront moins chargés
- Plus d'options dans le langage (heritage, surcharge, abstraction, finalisation, interface etc...)
- Cela vous permettra de passer plus facilement aux technologies java, .net, c#, c++ etc...

Conclusion : vous n'aurez pas besoin d'orienté objet pour par exemple 'boutique' réalisée en procédural mais pour tous les projetsd de grande envergures, avec des equipes de dévellopeùent, mis à jour régulièrement

class Membre
{
    $pseudo, $mdp;
    public function seConnecter();
    public funtion sInscrire();
}

class Panier
{
    $nbProduit,$prix;
    public function ajouterArticleDansPanier();
    public function retirerArticleDansPanier();
}

// VOCABULAIRE
Variable = propriété = attribut
Fonction = méthode
Instance = objet

Une classe permet de contenir des variables, avec des informations, ainsi que des méthodes compotant des traitements
Une class est un regroupement d'informations (Plan, modèle)
Objet = application du plan 














